$types: (padding, margin);
$locations: (all, vertical, horizontal, top, right, bottom, left);
$whitespace-keys: (padding padding, margin margin, all '', vertical -top -bottom, horizontal -left -right, top -top, right -right, bottom -bottom, left -left);
$sizes: (0,2, 4, 5, 6, 7, 8, 10, 12, 15, 16, 20, 24, 25, 26, 30, 32, 35, 40, 48, 56, 60, 64, 80, 84, 96, 136, 160, 120, 130, 140, 150, 160, 170, 180, 190, 200);
$pixel-sizes: ();

@for $i from 1 through length($sizes) {
  $unit: #{nth($sizes, $i)}px;
  $pixel-sizes: join($pixel-sizes, $unit);
}

@function expand-whitespace-key($k) {
  @each $pair in $whitespace-keys {
    $short: nth($pair, 1);
    $long: nth($pair, 2);
    // vertical and horizontal need to pass in 2 parameters
    @if (length($pair) == 3) {
      $long: (nth($pair, 2) nth($pair, 3));
    }
    @if $short == $k {
      @return $long;
    }
  }
  @warn 'Couldn\'t expand #{$k}';
  @return $k;
}

@mixin whitespace($spaces: ()) {
  @for $i from 1 through length($spaces) {
    $size: nth($sizes, $i);
    $pixel-size: nth($spaces, $i);

    @each $location in $locations {
      @each $type in $types {
        .#{$type}-#{$location}-#{$size} {
          @each $whitespace-location in expand-whitespace-key($location) {
            #{expand-whitespace-key($type)}#{$whitespace-location}: $pixel-size !important;
          }
        }
      }
    }
  }
}

@include whitespace($pixel-sizes);

.full-height {
  height: 100%;
  width: auto;
}

.full-width {
  width: 100%;
}

.width-20 {
  width: 20px;
}

.height-20 {
  height: 20px;
}

.width-105 {
  width: 105px;
}

.width-110 {
  width: 110px;
}

.width-115 {
  width: 115px;
}

.width-180 {
  width: 180px;
}

.height-1 {
  height: 1px;
}

.height-2 {
  height: 2px;
}

.height-34 {
  height: 34px !important;
}

.height-40 {
  height: 40px;
}

.height-45 {
  height: 45px;
}

.height-48 {
  height: 48px;
}

.height-64 {
  height: 64px;
}

.height-104 {
  height: 104px;
}

.width-200 {
  width: 200px;
}

.width-240 {
  width: 240px;
}
